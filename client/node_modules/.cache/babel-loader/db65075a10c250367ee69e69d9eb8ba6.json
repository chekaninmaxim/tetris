{"ast":null,"code":"var _jsxFileName = \"/home/ovo/projects/my-app/src/components/TetrisBlock.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Settings, { getRealSize, addPx } from '../settings.js';\n\nfunction TetrisBlock({\n  position,\n  color,\n  scale\n}) {\n  const style = {\n    top: addPx(getRealSize(position.y) * scale),\n    left: addPx(getRealSize(position.x) * scale),\n    backgroundColor: color,\n    width: addPx(Settings.cellSize * scale - 4),\n    height: addPx(Settings.cellSize * scale - 4)\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'Block',\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \" \");\n}\n\nTetrisBlock.propTypes = {\n  position: PropTypes.exact({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }).isRequired,\n  color: PropTypes.string.isRequired,\n  scale: PropTypes.number.isRequired\n};\nTetrisBlock.defaulProps = {\n  scale: 1\n};\nexport default TetrisBlock;","map":{"version":3,"sources":["/home/ovo/projects/my-app/src/components/TetrisBlock.js"],"names":["React","PropTypes","Settings","getRealSize","addPx","TetrisBlock","position","color","scale","style","top","y","left","x","backgroundColor","width","cellSize","height","propTypes","exact","number","isRequired","string","defaulProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,IAAkBC,WAAlB,EAA+BC,KAA/B,QAA2C,gBAA3C;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAArB,EAA+C;AAC7C,QAAMC,KAAK,GAAG;AACZC,IAAAA,GAAG,EAAEN,KAAK,CAACD,WAAW,CAACG,QAAQ,CAACK,CAAV,CAAX,GAA0BH,KAA3B,CADE;AAEZI,IAAAA,IAAI,EAAER,KAAK,CAACD,WAAW,CAACG,QAAQ,CAACO,CAAV,CAAX,GAA0BL,KAA3B,CAFC;AAGZM,IAAAA,eAAe,EAAEP,KAHL;AAIZQ,IAAAA,KAAK,EAAGX,KAAK,CAACF,QAAQ,CAACc,QAAT,GAAoBR,KAApB,GAA4B,CAA7B,CAJD;AAKZS,IAAAA,MAAM,EAAGb,KAAK,CAACF,QAAQ,CAACc,QAAT,GAAoBR,KAApB,GAA4B,CAA7B;AALF,GAAd;AAQA,sBACE;AAAK,IAAA,SAAS,EAAE,OAAhB;AAAyB,IAAA,KAAK,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAEDJ,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,QAAQ,EAAGL,SAAS,CAACkB,KAAV,CAAgB;AACzBN,IAAAA,CAAC,EAAEZ,SAAS,CAACmB,MADY;AAEzBT,IAAAA,CAAC,EAAEV,SAAS,CAACmB;AAFY,GAAhB,EAGRC,UAJmB;AAKtBd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,MAAV,CAAiBD,UALF;AAMtBb,EAAAA,KAAK,EAAEP,SAAS,CAACmB,MAAV,CAAiBC;AANF,CAAxB;AASAhB,WAAW,CAACkB,WAAZ,GAA0B;AACxBf,EAAAA,KAAK,EAAE;AADiB,CAA1B;AAIA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Settings, {getRealSize, addPx} from '../settings.js';\n\nfunction TetrisBlock({position, color, scale}) {\n  const style = {\n    top: addPx(getRealSize(position.y) * scale),\n    left: addPx(getRealSize(position.x) * scale),\n    backgroundColor: color,\n    width : addPx(Settings.cellSize * scale - 4),\n    height : addPx(Settings.cellSize * scale - 4),\n  }\n\n  return (\n    <div className={'Block'} style={style}> </div>\n  )\n}\n\nTetrisBlock.propTypes = {\n  position : PropTypes.exact({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }).isRequired,\n  color: PropTypes.string.isRequired,\n  scale: PropTypes.number.isRequired\n}\n\nTetrisBlock.defaulProps = {\n  scale: 1\n}\n\nexport default TetrisBlock;"]},"metadata":{},"sourceType":"module"}