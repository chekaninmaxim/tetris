{"ast":null,"code":"var _jsxFileName = \"/home/ovo/projects/my-app/src/components/GameStage.js\";\nimport React from 'react';\nimport Settings, { getRealSize, addPx } from '../settings.js';\nimport TetrisBlock from './TetrisBlock.js';\nimport getMovableBlock from '../block.js';\nimport { makeInitialState, moveBlocksDown, moveBlocksLeft, moveBlocksRight } from '../state.js';\nimport '../App.css';\nconst keyActions = {\n  '37': moveBlocksLeft,\n  '39': moveBlocksRight,\n  '40': moveBlocksDown\n};\n\nclass GameStage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stageWidth = Settings.stageSize.width;\n    this.stageHeight = Settings.stageSize.height;\n    this.style = {\n      width: addPx(getRealSize(this.stageWidth)),\n      height: addPx(getRealSize(this.stageHeight))\n    };\n    this.state = makeInitialState();\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._makeRegularMove = this._makeRegularMove.bind(this);\n  }\n\n  _handleKeyDown(event) {\n    console.log(event.keyCode);\n    const handler = keyActions[event.keyCode];\n    if (handler) this.setState(handler);\n  }\n\n  _makeRegularMove() {\n    if (this.state.movableBlocks.length) {\n      this.setState(moveBlocksDown);\n    } else {\n      this.setState(oldState => {\n        return { ...oldState,\n          movableBlocks: getMovableBlock()\n        };\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    this.timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown);\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'Tetris-stage',\n      style: this.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, this.state.movableBlocks.map((block, idx) => /*#__PURE__*/React.createElement(TetrisBlock, {\n      key: idx,\n      position: block.position,\n      color: block.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 55\n      }\n    })), this.state.blocksMap.map(function (row, y) {\n      return row.reduce(function (filtered, block, x) {\n        if (block) {\n          return filtered.concat( /*#__PURE__*/React.createElement(TetrisBlock, {\n            key: y * Settings.stageSize.width + x,\n            position: {\n              x,\n              y\n            },\n            color: block,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }\n          }));\n        } else {\n          return filtered;\n        }\n      }, []);\n    }));\n  }\n\n}\n\nexport default GameStage;","map":{"version":3,"sources":["/home/ovo/projects/my-app/src/components/GameStage.js"],"names":["React","Settings","getRealSize","addPx","TetrisBlock","getMovableBlock","makeInitialState","moveBlocksDown","moveBlocksLeft","moveBlocksRight","keyActions","GameStage","Component","constructor","props","stageWidth","stageSize","width","stageHeight","height","style","state","_handleKeyDown","bind","_makeRegularMove","event","console","log","keyCode","handler","setState","movableBlocks","length","oldState","componentDidMount","document","addEventListener","timerId","setInterval","updateRate","componentWillUnmount","removeEventListener","clearInterval","timerID","render","map","block","idx","position","color","blocksMap","row","y","reduce","filtered","x","concat"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Settings, {getRealSize, addPx} from '../settings.js';\nimport TetrisBlock from './TetrisBlock.js';\nimport getMovableBlock from '../block.js';\nimport {\n  makeInitialState,\n  moveBlocksDown,\n  moveBlocksLeft,\n  moveBlocksRight,\n\n  } from '../state.js';\nimport '../App.css';\n\nconst keyActions = {\n  '37' : moveBlocksLeft,\n  '39' : moveBlocksRight,\n  '40' : moveBlocksDown\n}\n\nclass GameStage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.stageWidth = Settings.stageSize.width;\n    this.stageHeight = Settings.stageSize.height;\n    this.style = {\n      width: addPx(getRealSize(this.stageWidth)),\n      height: addPx(getRealSize(this.stageHeight))\n    }\n\n    this.state = makeInitialState();\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._makeRegularMove = this._makeRegularMove.bind(this);\n  }\n\n  _handleKeyDown(event) {\n    console.log(event.keyCode);\n    const handler = keyActions[event.keyCode];\n    if (handler) this.setState(handler);\n  }\n\n  _makeRegularMove() {\n    if (this.state.movableBlocks.length) {\n      this.setState(moveBlocksDown);\n    } else {\n      this.setState(\n        oldState => {\n          return {...oldState, movableBlocks: getMovableBlock()}\n        }\n      );\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    this.timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown);\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className={'Tetris-stage'} style={this.style}>\n        {this.state.movableBlocks.map((block, idx) => <TetrisBlock\n          key={idx}\n          position={block.position}\n          color={block.color} />\n        )}\n\n        {this.state.blocksMap.map(function(row, y) {\n          return row.reduce(function(filtered, block, x) {\n            if (block) {\n              return filtered.concat(\n                <TetrisBlock\n                  key = {y * Settings.stageSize.width + x}\n                  position={{x, y}}\n                  color={block}\n                /> \n              )\n            } else {\n              return filtered;\n            }\n          }, [])\n        })}\n      </div>\n    )\n  }\n}\n\nexport default GameStage;"]},"metadata":{},"sourceType":"module"}