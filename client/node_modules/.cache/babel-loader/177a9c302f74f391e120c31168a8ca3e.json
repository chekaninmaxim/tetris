{"ast":null,"code":"var _jsxFileName = \"/home/ovo/projects/my-app/src/components/GameStage.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport Settings, { getRealSize, addPx } from '../settings';\nimport TetrisBlock from './TetrisBlock';\nimport C from '../constants';\nimport { getRandomFigure } from '../figure';\nimport { makeInitialState, blocksReducer } from '../state.js';\nconst key2Action = {\n  '32': {\n    type: C.ROTATE\n  },\n  '37': {\n    type: C.LEFT\n  },\n  '39': {\n    type: C.RIGHT\n  },\n  '40': {\n    type: C.DOWN\n  }\n};\n\nconst GameStage = () => {\n  const style = {\n    width: addPx(getRealSize(Settings.stageSize.width)),\n    height: addPx(getRealSize(Settings.stageSize.height))\n  };\n  const [state, dispatch] = useReducer(blocksReducer, makeInitialState());\n\n  const handleKeyDown = ({\n    keyCode\n  }) => {\n    const action = key2Action[keyCode];\n    if (handler && state.figure) dispatch(action);\n  };\n\n  const makeRegularMove = () => dispatch({\n    type: state.figure ? C.DOWN : C.NEW\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    const timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n    return () => {\n      document.removeEventListener(\"keydown\", this._handleKeyDown);\n      clearInterval(timerID);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'Tetris-stage',\n    style: this.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, state.figure && this.state.figure.blocks.map((block, idx) => /*#__PURE__*/React.createElement(TetrisBlock, {\n    key: idx,\n    position: block,\n    color: this.state.figure.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 69\n    }\n  })), this.state.blocksMap.map(function (row, y) {\n    return row.reduce(function (filtered, block, x) {\n      if (block) {\n        return filtered.concat( /*#__PURE__*/React.createElement(TetrisBlock, {\n          key: y * Settings.stageSize.width + x,\n          position: {\n            x,\n            y\n          },\n          color: block,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }));\n      } else {\n        return filtered;\n      }\n    }, []);\n  }));\n};\n\nexport default GameStage;","map":{"version":3,"sources":["/home/ovo/projects/my-app/src/components/GameStage.js"],"names":["React","useReducer","useEffect","Settings","getRealSize","addPx","TetrisBlock","C","getRandomFigure","makeInitialState","blocksReducer","key2Action","type","ROTATE","LEFT","RIGHT","DOWN","GameStage","style","width","stageSize","height","state","dispatch","handleKeyDown","keyCode","action","handler","figure","makeRegularMove","NEW","document","addEventListener","_handleKeyDown","timerId","setInterval","_makeRegularMove","updateRate","removeEventListener","clearInterval","timerID","blocks","map","block","idx","color","blocksMap","row","y","reduce","filtered","x","concat"],"mappings":"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","sourcesContent":["\nimport React, {useReducer, useEffect} from 'react';\nimport Settings, {getRealSize, addPx} from '../settings';\nimport TetrisBlock from './TetrisBlock';\nimport C from '../constants'\nimport { getRandomFigure } from '../figure';\nimport {\n  makeInitialState,\n  blocksReducer\n} from '../state.js';\n\nconst key2Action = {\n  '32': {type: C.ROTATE},\n  '37': {type: C.LEFT},\n  '39': {type: C.RIGHT},\n  '40': {type: C.DOWN}\n}\n\nconst GameStage = () => {\n\n  const style = {\n    width: addPx(getRealSize(Settings.stageSize.width)),\n    height: addPx(getRealSize(Settings.stageSize.height))\n  }\n\n  const [state, dispatch] = useReducer(blocksReducer, makeInitialState());\n\n  const handleKeyDown = ({keyCode}) => {\n    const action = key2Action[keyCode];\n    if (handler && state.figure) dispatch(action);\n  }\n\n  const makeRegularMove = () => dispatch({\n    type : (state.figure ? C.DOWN : C.NEW)\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    const timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n    return () => {\n      document.removeEventListener(\"keydown\", this._handleKeyDown);\n      clearInterval(timerID);\n    }\n  }, [])\n\n  return (\n    <div className={'Tetris-stage'} style={this.style}>\n      {state.figure && this.state.figure.blocks.map((block, idx) => <TetrisBlock\n        key={idx}\n        position={block}\n        color={this.state.figure.color} />\n      )}\n\n      {this.state.blocksMap.map(function(row, y) {\n        return row.reduce(function(filtered, block, x) {\n          if (block) {\n            return filtered.concat(\n              <TetrisBlock\n                key = {y * Settings.stageSize.width + x}\n                position={{x, y}}\n                color={block}\n              /> \n            )\n          } else {\n            return filtered;\n          }\n        }, [])\n      })}\n    </div>\n  )\n}\n\nexport default GameStage;"]},"metadata":{},"sourceType":"module"}