{"ast":null,"code":"import Settings from './settings.js';\nexport const makeInitialState = function () {\n  const blocksMap = [];\n\n  for (let i = 0; i < Settings.stageSize.height; i++) {\n    blocksMap.push(Array(10));\n  }\n\n  return {\n    movableBlocks: [{\n      position: {\n        x: 2,\n        y: 0\n      },\n      color: 'red'\n    }, {\n      position: {\n        x: 2,\n        y: 1\n      },\n      color: 'blue'\n    }, {\n      position: {\n        x: 3,\n        y: 1\n      },\n      color: 'yellow'\n    }, {\n      position: {\n        x: 2,\n        y: 2\n      },\n      color: 'red'\n    }],\n    blocksMap: blocksMap\n  };\n};\n\nfunction moveBlocksFactory(getNewPosition) {\n  const setStateFn = function (state) {\n    const isFigureStuck = state.movableBlocks.some(block => {\n      const newPosition = getNewPosition(block.position);\n      return Boolean(state.blocksMap[block.position.x][block.position.y + 1]) || newPosition.y >= Settings.stageSize.height;\n    });\n\n    if (isFigureStuck) {\n      const newBlocksMap = state.blocksMap.slice();\n\n      for (let block of state.movableBlocks) {\n        newBlocksMap[block.position.x][block.position.y + 1] = block.color;\n      }\n\n      return {\n        movableBlocks: [],\n        blocksMap: newBlocksMap\n      };\n    } else {\n      const newMovableBlocks = state.movableBlocks.map(block => {\n        const newBlock = { ...block,\n          position: {\n            x: block.position.x,\n            y: block.position.y + 1\n          }\n        };\n        return newBlock;\n      });\n      return { ...state,\n        movableBlocks: newMovableBlocks\n      };\n    }\n  };\n\n  return setStateFn;\n}\n\nexport const moveBlocksDown = moveBlocksFactory(p => ({\n  x: p.x,\n  y: p.y\n}));","map":{"version":3,"sources":["/home/ovo/projects/my-app/src/state.js"],"names":["Settings","makeInitialState","blocksMap","i","stageSize","height","push","Array","movableBlocks","position","x","y","color","moveBlocksFactory","getNewPosition","setStateFn","state","isFigureStuck","some","block","newPosition","Boolean","newBlocksMap","slice","newMovableBlocks","map","newBlock","moveBlocksDown","p"],"mappings":"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","sourcesContent":["import Settings from './settings.js';\n\nexport const makeInitialState = function() {\n\tconst blocksMap = [];\n\tfor (let i = 0; i < Settings.stageSize.height; i++) {\n\t\tblocksMap.push(Array(10));\n\t}\n\treturn {\n\t\tmovableBlocks : [\n\t\t\t{\n\t\t\t\tposition: {x: 2, y: 0},\n\t\t\t\tcolor: 'red'\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: {x: 2, y: 1},\n\t\t\t\tcolor: 'blue'\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: {x: 3, y: 1},\n\t\t\t\tcolor: 'yellow'\n\t\t\t},\n\t\t\t{\n\t\t\t\tposition: {x: 2, y: 2},\n\t\t\t\tcolor: 'red'\n\t\t\t},\n\t\t],\n\t\tblocksMap: blocksMap,\n\t}\n}\n\nfunction moveBlocksFactory(getNewPosition) {\n\tconst setStateFn = function(state) {\n\t\t\n\t\tconst isFigureStuck = state.movableBlocks.some(block => {\n\t\t\tconst newPosition = getNewPosition(block.position);\n\n\t\t\treturn Boolean(state.blocksMap[block.position.x][block.position.y + 1])\n\t\t\t\t|| newPosition.y >= Settings.stageSize.height;\n\t\t});\n\n\t\tif (isFigureStuck) {\n\t\t\tconst newBlocksMap = state.blocksMap.slice();\n\t\t\tfor (let block of state.movableBlocks) {\n\t\t\t\tnewBlocksMap[block.position.x][block.position.y + 1] = block.color;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmovableBlocks : [],\n\t\t\t\tblocksMap: newBlocksMap\n\t\t\t}\n\t\t} else {\n\t\t\tconst newMovableBlocks = state.movableBlocks.map(block => {\n\t\t\t\tconst newBlock = {\n\t\t\t\t\t...block,\n\t\t\t\t\tposition : {\n\t\t\t\t\t\tx: block.position.x,\n\t\t\t\t\t\ty: block.position.y + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newBlock;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmovableBlocks: newMovableBlocks,\n\t\t\t}\n\t\t}\n\t}\n\n\treturn setStateFn;\n}\n\nexport const moveBlocksDown = moveBlocksFactory(p => ({x: p.x, y: p.y}));"]},"metadata":{},"sourceType":"module"}