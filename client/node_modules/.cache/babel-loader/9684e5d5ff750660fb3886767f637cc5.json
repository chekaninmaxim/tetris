{"ast":null,"code":"var _jsxFileName = \"/home/ovo/projects/my-app/src/components/GameStage.js\";\nimport React from 'react';\nimport Settings, { getRealSize, addPx } from '../settings.js';\nimport TetrisBlock from './TetrisBlock.js';\nimport C from '../constants';\nimport { getMovableBlock, TetrisFigure } from '../block.js';\nimport { makeInitialState, moveBlocksDown, moveBlocksLeft, moveBlocksRight } from '../state.js';\nconst keyActions = {\n  '37': moveBlocksFactory(C.LEFT),\n  '39': moveBlocksFactory(C.RIGHT),\n  '40': moveBlocksFactory(C.DOWN)\n};\n\nclass GameStage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stageWidth = Settings.stageSize.width;\n    this.stageHeight = Settings.stageSize.height;\n    this.style = {\n      width: addPx(getRealSize(this.stageWidth)),\n      height: addPx(getRealSize(this.stageHeight))\n    };\n    this.state = makeInitialState();\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._makeRegularMove = this._makeRegularMove.bind(this);\n  }\n\n  _handleKeyDown(event) {\n    const handler = keyActions[event.keyCode];\n    if (handler && this.state.figure) this.setState(handler);\n  }\n\n  _makeRegularMove() {\n    if (this.state.figure) {\n      this.setState(moveBlocksDown);\n    } else {\n      this.setState({\n        figure: getMovableBlock()\n      });\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    this.timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown);\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: 'Tetris-stage',\n      style: this.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, this.state.figure && this.state.figure.blocks.map((block, idx) => /*#__PURE__*/React.createElement(TetrisBlock, {\n      key: idx,\n      position: block,\n      color: this.state.figure.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 76\n      }\n    })), this.state.blocksMap.map(function (row, y) {\n      return row.reduce(function (filtered, block, x) {\n        if (block) {\n          return filtered.concat( /*#__PURE__*/React.createElement(TetrisBlock, {\n            key: y * Settings.stageSize.width + x,\n            position: {\n              x,\n              y\n            },\n            color: block,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }\n          }));\n        } else {\n          return filtered;\n        }\n      }, []);\n    }));\n  }\n\n}\n\nexport default GameStage;","map":{"version":3,"sources":["/home/ovo/projects/my-app/src/components/GameStage.js"],"names":["React","Settings","getRealSize","addPx","TetrisBlock","C","getMovableBlock","TetrisFigure","makeInitialState","moveBlocksDown","moveBlocksLeft","moveBlocksRight","keyActions","moveBlocksFactory","LEFT","RIGHT","DOWN","GameStage","Component","constructor","props","stageWidth","stageSize","width","stageHeight","height","style","state","_handleKeyDown","bind","_makeRegularMove","event","handler","keyCode","figure","setState","componentDidMount","document","addEventListener","timerId","setInterval","updateRate","componentWillUnmount","removeEventListener","clearInterval","timerID","render","blocks","map","block","idx","color","blocksMap","row","y","reduce","filtered","x","concat"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Settings, {getRealSize, addPx} from '../settings.js';\nimport TetrisBlock from './TetrisBlock.js';\nimport C from '../constants'\nimport {getMovableBlock, TetrisFigure} from '../block.js';\nimport {\n  makeInitialState,\n  moveBlocksDown,\n  moveBlocksLeft,\n  moveBlocksRight,\n\n  } from '../state.js';\n\nconst keyActions = {\n  '37': moveBlocksFactory(C.LEFT),\n  '39': moveBlocksFactory(C.RIGHT),\n  '40': moveBlocksFactory(C.DOWN) \n}\n\nclass GameStage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.stageWidth = Settings.stageSize.width;\n    this.stageHeight = Settings.stageSize.height;\n    this.style = {\n      width: addPx(getRealSize(this.stageWidth)),\n      height: addPx(getRealSize(this.stageHeight))\n    }\n\n    this.state = makeInitialState();\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n    this._makeRegularMove = this._makeRegularMove.bind(this);\n  }\n\n  _handleKeyDown(event) {\n    const handler = keyActions[event.keyCode];\n    if (handler && this.state.figure) this.setState(handler);\n  }\n\n  _makeRegularMove() {\n    if (this.state.figure) {\n      this.setState(moveBlocksDown);\n    } else {\n      this.setState({figure: getMovableBlock()});\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this._handleKeyDown);\n    this.timerId = setInterval(this._makeRegularMove, Settings.updateRate);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown);\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className={'Tetris-stage'} style={this.style}>\n        {this.state.figure && this.state.figure.blocks.map((block, idx) => <TetrisBlock\n          key={idx}\n          position={block}\n          color={this.state.figure.color} />\n        )}\n\n        {this.state.blocksMap.map(function(row, y) {\n          return row.reduce(function(filtered, block, x) {\n            if (block) {\n              return filtered.concat(\n                <TetrisBlock\n                  key = {y * Settings.stageSize.width + x}\n                  position={{x, y}}\n                  color={block}\n                /> \n              )\n            } else {\n              return filtered;\n            }\n          }, [])\n        })}\n      </div>\n    )\n  }\n}\n\nexport default GameStage;"]},"metadata":{},"sourceType":"module"}